<?xml version="1.0" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <parameters>
        <parameter key="factory.class">Matthias\SymfonyServiceDefinitionValidator\Tests\Functional\Fixtures\Factory</parameter>
    </parameters>
    <services>

        <!--<service id="factory"
                 class="Matthias\SymfonyServiceDefinitionValidator\Tests\Functional\Fixtures\Factory">
        </service>

        <service id="factory_with_variable_class"
                 class="%factory.class%">
        </service>

        <service id="mailer_from_factory"
                 class="Matthias\SymfonyServiceDefinitionValidator\Tests\Functional\Fixtures\Mailer"
                 factory-service="factory"
                 factory-method="create">
            <argument>string argument</argument>
        </service>

        &lt;!&ndash; factory class should be resolved &ndash;&gt;
        <service id="mailer_from_variable_factory"
                 factory-class="%factory.class%"
                 factory-method="create"
                 class="Matthias\SymfonyServiceDefinitionValidator\Tests\Functional\Fixtures\Mailer">
            <argument>string argument</argument>
         </service>

        <service id="mailer"
                 class="Matthias\SymfonyServiceDefinitionValidator\Tests\Functional\Fixtures\Mailer">
            <argument type="service" id="transport"/>
        </service>

        <service id="transport"
                 class="Matthias\SymfonyServiceDefinitionValidator\Tests\Functional\Fixtures\Transport">
            &lt;!&ndash; has optional argument &ndash;&gt;
            <call method="setUsername">
                <argument>matthias</argument>
            </call>
        </service>

        <service id="translator"
                 class="Matthias\SymfonyServiceDefinitionValidator\Tests\Functional\Fixtures\Translator">
            <argument type="service" id="catalogue"/>
        </service>

        &lt;!&ndash; private service, will be inlined &ndash;&gt;
        <service id="catalogue"
                 class="Matthias\SymfonyServiceDefinitionValidator\Tests\Functional\Fixtures\Catalogue"
                 public="false">
        </service>

        <service id="mail_manager"
                 class="Matthias\SymfonyServiceDefinitionValidator\Tests\Functional\Fixtures\MailManager">
            &lt;!&ndash; has an optional type-hinted argument for a Mailer &ndash;&gt;
        </service>

        <service id="mail_manager2"
                 class="Matthias\SymfonyServiceDefinitionValidator\Tests\Functional\Fixtures\MailManager">
            &lt;!&ndash; has an optional type-hinted argument for a Mailer &ndash;&gt;
            <argument>null</argument>
        </service>

        <service id="registry"
                 class="Matthias\SymfonyServiceDefinitionValidator\Tests\Functional\Fixtures\Registry">
            &lt;!&ndash; has an optional array argument &ndash;&gt;
        </service>

        <service id="transport2"
                 class="Matthias\SymfonyServiceDefinitionValidator\Tests\Functional\Fixtures\Transport">
            <call method="setPassword">&lt;!&ndash; method does not exist, but will be handled by __call &ndash;&gt;
                <argument>root</argument>
            </call>
         </service>-->

        <service id="service_with_expression_argument"
                 class="Matthias\SymfonyServiceDefinitionValidator\Tests\Functional\Fixtures\Mailer">
            <argument type="expression">service('transport')</argument>
        </service>

    </services>
</container>